@model Overseas.Manager.DB.domainMaster

<div class="grid-1 ">
    <div class="form-body">
        @using (Html.BeginForm("update", "Domain", FormMethod.Post, htmlAttributes: new { @class = "form-horizontal" }))
        {
            <div class="form-group">
                <label for="focusedinput" class="col-sm-2 control-label">
                    @Html.LabelFor(model => model.domainId)
                </label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.domainId, string.Empty, htmlAttributes: new { @class = "form-control1", id = "focusedinput", placeholder = "Enter Domain ID" })
                </div>
                <div class="col-sm-2">
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.domainId, string.Empty, htmlAttributes: new { @class = "alert-danger" })
                    </p>
                </div>
            </div>

            <div class="form-group">
                <label for="focusedinput" class="col-sm-2 control-label">
                    @Html.LabelFor(model => model.domainName)
                </label>
                <div class="col-sm-8">
                    @Html.TextBoxFor(model => model.domainName, string.Empty, htmlAttributes: new { @class = "form-control1", id = "focusedinput", placeholder = "Enter Domain Name" })
                </div>
                <div class="col-sm-2">
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.domainName, string.Empty, htmlAttributes: new { @class = "alert-danger" })
                    </p>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <input type="submit" value="Save Domain" class="btn btn-danger" />
            </div>


        }
    </div>
</div>





